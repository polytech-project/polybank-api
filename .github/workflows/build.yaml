name: Build image

on:
  workflow_call:
    inputs:
      dockerfile:
        description: "The path to the Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      context:
        description: "The build directory of the image"
        required: false
        type: string
        default: "."
      image-name:
        required: true
        type: string
        description: "The name of the image"
        default: "api"
      build-args:
        required: false
        type: string
        description: "List of build args"
      tag:
        required: false
        type: string
        description: "The git tag to checkout"
      repository:
        required: false
        type: string
        description: "The repository to checkout"

    secrets:
      CONTAINER_REGISTRY_TOKEN:
        required: true
      CONTAINER_REGISTRY_USERNAME:
        required: true
      CONTAINER_REGISTRY_ENDPOINT:
        required: true
      PAT:
        required: true

  workflow_dispatch:
    inputs:
      dockerfile:
        description: "The path to the Dockerfile"
        required: false
        type: string
        default: "Dockerfile"
      context:
        description: "The build directory of the image"
        required: false
        type: string
        default: "."
      image-name:
        required: true
        type: string
        description: "The name of the image"
      build-args:
        required: false
        type: string
        description: "List of build args"
      tag:
        required: false
        type: string
        description: "The git tag to checkout"
      repository:
        required: true
        type: string
        description: "The repository to checkout"
  push:
    tags:
      - '*'

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.PAT }}
          fetch-tags: true
          fetch-depth: 0

  build-and-push-image:
    name: Docker build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.PAT }}
          fetch-tags: true
          fetch-depth: 0
      - name: Remove v from tag
        id: remove-v
        run: |
          TAG=$(echo "${{ inputs.tag }}" | sed -e 's/^v//')
          echo "tag-name=$TAG" >> "$GITHUB_OUTPUT"

      - name: Add Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/api
          tags: |
            latest
            buildcache
            1.0.0

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Debug Tags
        run: |
          echo "Tags: ${{ steps.remove-v.outputs.tag-name }}"

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          file: ./Dockerfile
          context: .
          build-args: ${{ inputs.build-args }}
          push: true
          tags: |
            ${{ secrets.CONTAINER_REGISTRY.ENDPOINT }}/api:latest
            ${{ secrets.CONTAINER_REGISTRY.ENDPOINT }}/api:buildcache
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=polytech-project/polybank-api/api:buildcache
          cache-to: type=gha,mode=max,scope=polytech-project/polybank-api/api:buildcache
