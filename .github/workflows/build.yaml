name: Build image

on:
  push:
    tags:
      - '*'

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.PAT }}
          fetch-tags: true
          fetch-depth: 0

  build-and-push-image:
    name: Docker build and push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.tag }}
          repository: ${{ inputs.repository }}
          token: ${{ secrets.PAT }}
          fetch-tags: true
          fetch-depth: 0
      - name: Remove v from tag
        id: remove-v
        run: |
          TAG=$(echo "${{ inputs.tag }}" | sed -e 's/^v//')
          echo "tag-name=$TAG" >> "$GITHUB_OUTPUT"

      - name: Add Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}/${{ inputs.image-name }}
          tags: |
            latest
            buildcache
            ${{ steps.remove-v.outputs.tag-name }}

      - name: Login to container registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.CONTAINER_REGISTRY_USERNAME }}
          password: ${{ secrets.CONTAINER_REGISTRY_PASSWORD }}
          registry: ${{ secrets.CONTAINER_REGISTRY_ENDPOINT }}

      - name: Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          file: ${{ inputs.dockerfile }}
          context: .
          build-args: ${{ inputs.build-args }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ inputs.repository }}/${{ inputs.image-name }}:buildcache
          cache-to: type=gha,mode=max,scope=${{ inputs.repository }}/${{ inputs.image-name }}:buildcache
